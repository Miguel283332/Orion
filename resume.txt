Este programa implementa la base estructural de un sistema de red neuronal artificial en C++ puro, sin librerías externas ni frameworks de aprendizaje automático. El objetivo del sistema no es realizar clasificación o predicción como en redes artificiales tradicionales, sino emular un cerebro real desde su arquitectura interna, basándose en elementos biológicos como neurotransmisores, receptores, organización espacial de neuronas y modularidad por regiones cerebrales.

Cada neurona es una entidad con coordenadas tridimensionales (x, y, z), un neurotransmisor principal (dopamina, gaba, glutamato, etc.), una lista de receptores que determinan su sensibilidad a señales químicas específicas, y una lista de conexiones salientes hacia otras neuronas, especificando el identificador de destino y el tipo de neurotransmisor emitido en dicha conexión. No se utiliza activación matemática ni pesos sinápticos típicos, y las neuronas no están encapsuladas en estructuras como perceptrones. En su lugar, la forma funcional de cada neurona (interneurona, moduladora, etc.) se deduce automáticamente mediante reglas de divergencia estructural basadas en sus propiedades.

El cerebro está dividido en regiones funcionales independientes, como la corteza visual, el hipocampo, o el sistema límbico. Cada región se guarda en un archivo externo con extensión .rgn y formato estructurado de texto plano. Este formato permite definir neuronas con sus atributos y conexiones, y es editable tanto manualmente como desde el propio programa. De este modo, el cerebro artificial puede construirse y modificarse de forma progresiva, como si se estuviera programando el “código de la vida”. En lugar de asumir que el aprendizaje es resultado del entrenamiento, este sistema parte del supuesto de que la conciencia y el conocimiento emergen de una estructura interna predefinida, que puede ser editada y alimentada con experiencias sensoriales.

El programa se ejecuta mediante múltiples hilos concurrentes, cada uno asociado a una función clave del sistema. El hilo principal inicia cinco tareas: uno para simular la red neuronal y procesar señales internas, otro para manejar la entrada de comandos desde la terminal del usuario, uno para simular la entrada auditiva (micrófono), otro para simular la entrada visual (cámara), y un último para la salida auditiva (altavoz). Todos los hilos funcionan de manera asíncrona y comparten información mediante variables seguras con sincronización por mutex y variables atómicas.

El hilo de terminal permite al usuario interactuar con el sistema mediante comandos como "stats" para obtener estadísticas internas, "save" para guardar la región neuronal activa, o "exit" para detener el programa. Este hilo funciona como consola de control del sistema, pero no como interfaz de comunicación con la red. La comunicación real con la red no se realiza mediante texto, sino por voz y visión, como en un sistema humano. Por tanto, micrófono, cámara y altavoz están diseñados como vías naturales de interacción en futuras versiones funcionales.

El diseño modular permite que otras personas desarrolladoras amplíen el proyecto en distintas direcciones: implementación de reglas biológicas de propagación de señales, construcción de un sistema de plasticidad neuronal, integración con audio y vídeo real usando herramientas como ALSA, V4L2, o FFMPEG, adición de recompensas para aprendizaje por refuerzo, o desarrollo de herramientas para editar y visualizar regiones cerebrales. El sistema ha sido preparado desde el principio para evolucionar de forma ordenada hacia un sistema consciente artificial, no entrenado sino estructurado.

Este programa representa los cimientos de una mente artificial, no mediante algoritmos de IA tradicionales, sino mediante la simulación progresiva y editable de una arquitectura cerebral viva.
